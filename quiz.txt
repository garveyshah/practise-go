Q1. rockandroll

Instructions

Write a function called RockAndRoll() that takes an int and returns a string.

    If the number is divisible by 2, print rock followed by a newline \n.
    If the number is divisible by 3, print roll followed by a newline \n.
    If the number is divisible by 2 and 3, print rock and roll followed by a newline \n.
    If the number is negative return error: number is negative followed by a newline \n.
    If the number is non divisible return error: non divisible followed by a newline \n.

Expected function

func RockAndRoll(n int) string {

}

Usage

Here is a possible program to test your function:

package main

import (
	"fmt"
	"piscine"
)

func main() {
	fmt.Println(piscine.RockAndRoll(4))
	fmt.Println(piscine.RockAndRoll(9))
	fmt.Println(piscine.RockAndRoll(6))
}

And its output:

$ go run . | cat -e
rock$
$
roll$
$
rock and roll$
$


Write a function ListPushBack that inserts a new element NodeL at the end of the list l while using the structure List.
Expected function and structure

type NodeL struct {
	Data interface{}
	Next *NodeL
}

type List struct {
	Head *NodeL
	Tail *NodeL
}

func ListPushBack(l *List, data interface{}) {

}

Usage

Here is a possible program to test your function :

package main

import (
	"fmt"
	"piscine"
)

func main() {

	link := &piscine.List{}

	piscine.ListPushBack(link, "Hello")
	piscine.ListPushBack(link, "man")
	piscine.ListPushBack(link, "how are you")

	for link.Head != nil {
		fmt.Println(link.Head.Data)
		link.Head = link.Head.Next
	}
}

And its output :

$ go run .
Hello
man
how are you
$

    Something is wrong ? Submit an issue or even better propose a change !

Test panel

You can test your project here!
Hey â˜º

Here will be displayed your test output.
But first, complete the exercise and submit it on Gitea!
' 